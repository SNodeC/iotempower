#@IgnoreInspection BashAddShebang
# Read system configuration
#
# if __IOTEMPOWER_NOERROR is set, it will not exit
# when files are not found.

# search system.conf in parent directories and build a respective path to self
# this search goes the following number of levels up max
parent_levels=5
path="$(pwd)"
topic=""
IOTEMPOWER_SYSTEM_CONFIG="" # we should start empty
while [[ ! -e "system.conf" ]]; do
    if [[ $parent_levels == 0 ]]; then
        break
    fi
    bn=$(basename "$(pwd)")
    if [[ "$topic" ]]; then
        topic="$bn/$topic"
    else
        topic="$bn"
    fi
    parent_levels=$(( $parent_levels - 1 ))
    cd ..
done

# first, read boot_config for special settings on pi
source "$IOTEMPOWER_ROOT/bin/read_boot_config"

# second, read eventually a config file in etc
# should have been read for iot-environment
# just read it again here
if [[ -e "$IOTEMPOWER_ROOT/etc/iotempower.conf" ]]; then
    source "$IOTEMPOWER_ROOT/etc/iotempower.conf"
fi

# last, read a locally available system.conf, can overwrite everything
_IOTEMPOWER_TMP="$IOTEMPOWER_AP_NAME"
IOTEMPOWER_AP_NAME="__IOTEMPOWER_TEST__"
source "system.conf" &> /dev/null || { 
    if [[ ! "$__IOTEMPOWER_NOERROR" ]]; then
        echo "Can't read system.conf. Aborting." 1>&2
        exit 1 
    fi
}
IOTEMPOWER_SYSTEM_CONFIG="$(pwd)/system.conf"

if [[ "$IOTEMPOWER_AP_NAME" != "__IOTEMPOWER_TEST__" ]]; then # was overwritten
    IOTEMPOWER_AP_NAME_FULL="$IOTEMPOWER_AP_NAME"
else # not overwritten, restore
    IOTEMPOWER_AP_NAME="$_IOTEMPOWER_TMP"
fi 
unset _IOTEMPOWER_TMP


cd "$path" # return to original path

#echo DEBUG read_system_config
#echo $IOTEMPOWER_AP_NAME_FULL
#echo $IOTEMPOWER_AP_NAME
#echo $IOTEMPOWER_AP_PASSWORD
#echo DEBUG read_system_config END
