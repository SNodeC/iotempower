#!/bin/bash
if [[ $# -gt 4 || "$*" = "help" || "$*" = "-h" || "$*" = "--help" ]]; then
cat << EOF

this must be called from a node directory (or one of its parent system
directories) and reads it will set the gateway wifi configurartion of that system (SSID, password, gateway IP).

It rebuilds firmwares for the affected nodes and remotely flashes
the respected nodes.

If credentials are given, it over writes the global wifi configuration.
Else it the gateway configuration is set to the default global values

If you are running all systems from same gateway, you can also change the credentials by creating an iotempower.conf file in iot/etc/
Copy the iotempower.conf.example file, (delete the .example extension) and adjust the values.

EOF
exit 1
fi

# TODO: add option to specify input file with list of specific nodes to deploy

[ "$IOTEMPOWER_ACTIVE" = "yes" ] || { echo "IoTempower not active, aborting." 1>&2;exit 1; }

#export IOTEMPOWER_DEPLOY=active


if [[ -e "system.conf" ]]; then  # started from system-directory
   ${EDITOR:-nano} system.conf # TODO how do we make it use the local default editor for all systems?

else # started from somewhere else, so search for system.conf in subdirs

    # first search if there is a system.conf, exit if not
    source "$IOTEMPOWER_ROOT/bin/read_system_config"
    path="$IOTEMPOWER_SYSTEM_CONFIG"
    echo "this is not a system directory, searching for system.conf in parent directories"
    

    # TODO: think about running them all in parallel (or batches)
    find -name system.conf |\
        cd "$path"
        cd "$(dirname "$path")"
         ${EDITOR:-nano} system.conf # TODO how do we make it use the local default editor for all systems?

    echo "Wifi credentials were set"
    exit 0

fi # not in  a system-directory
 echo "No system.conf found, aborting."